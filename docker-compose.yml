services:
  frontend:
    build:
      context: ./frontend
    working_dir: /app
    command: npm run build && npm run preview -- --host 0.0.0.0 --port 3000
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      NODE_ENV: production
    networks:
      - yachtpricer-net

  backend:
    build:
      context: ./backend
    working_dir: /app
    command: ["sh", "./entrypoint.sh"]
    restart: unless-stopped
    ports:
      - "8000:8000"
    env_file:
      - ./backend/.env
    environment:
      NODE_ENV: production
    depends_on:
      db:
        condition: service_healthy
    networks:
      - yachtpricer-net
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8000/api/health || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 5

  db:
    image: postgres:14
    restart: unless-stopped
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: yachtpricer
    volumes:
      - ./db-data:/var/lib/postgresql/data
    ports:
      - "127.0.0.1:5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d yachtpricer"]
      interval: 5s
      timeout: 5s
      retries: 10
    networks:
      - yachtpricer-net

networks:
  yachtpricer-net:
    driver: bridge