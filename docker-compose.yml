version: '3.8'

services:
  frontend:
    build:
      context: ./frontend
    working_dir: /app
    command: npm run dev -- --host 0.0.0.0 --port 3000
    ports:
      - "3000:3000"
    environment:
      NODE_ENV: development
    volumes:
      - ./frontend:/app
      - frontend_node_modules:/app/node_modules
    networks:
      - yachtpricer-net

  backend:
    build:
      context: ./backend
      target: deps
    working_dir: /app
    command: ["sh", "./entrypoint.dev.sh"]
    ports:
      - "8000:8000"
    environment:
      NODE_ENV: development
      DATABASE_URL: postgresql://postgres:postgres@db:5432/yachtpricer
      CHOKIDAR_USEPOLLING: "1"
    volumes:
      - ./backend:/app
      - backend_node_modules:/app/node_modules
    depends_on:
      db:
        condition: service_healthy
    networks:
      - yachtpricer-net
    healthcheck:
      test: ["CMD-SHELL", "node -e \"require('http').get('http://localhost:8000/health',r=>process.exit(r.statusCode===200?0:1)).on('error',()=>process.exit(1))\" || node -e \"require('http').get('http://localhost:8000/api/health',r=>process.exit(r.statusCode===200?0:1)).on('error',()=>process.exit(1))\""]
      interval: 5s
      timeout: 3s
      retries: 20

  db:
    image: postgres:14
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: yachtpricer
    volumes:
      - ./db-data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d yachtpricer"]
      interval: 3s
      timeout: 3s
      retries: 20
    networks:
      - yachtpricer-net

  prisma-studio:
    build:
      context: ./backend
    # target: devtools  # можно оставить строку, если у тебя есть этот stage
      target: devtools
    ports:
      - "5556:5555"
    environment:
      NODE_ENV: development
      DATABASE_URL: postgresql://postgres:postgres@db:5432/yachtpricer
    depends_on:
      db:
        condition: service_healthy
    networks:
      - yachtpricer-net

networks:
  yachtpricer-net:
    driver: bridge

volumes:
  frontend_node_modules: {}
  backend_node_modules: {}