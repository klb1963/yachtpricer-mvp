services:
  frontend:
    build:
      context: ./frontend
    working_dir: /app
    # –æ–¥–∏–Ω –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä —Å–∞–º —Å–æ–±–∏—Ä–∞–µ—Ç –∏ —Å–µ—Ä–≤–∏—Ç —Å—Ç–∞—Ç–∏–∫—É
    command: sh -lc "npm ci && npm run build && npx -y serve -s dist -l 3000"
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      NODE_ENV: production
      VITE_API_URL: /api
    networks:
      - yachtpricer-net

  backend:
    build:
      context: ./backend
    working_dir: /app
    command: ["sh", "-lc", "npx prisma migrate deploy && node dist/main.js"]
    restart: unless-stopped
    ports:
      - "8000:8000"
    environment:
      NODE_ENV: production
      # üëâ –ø–µ—Ä–µ–º–µ—Å—Ç–∏–ª–∏ –∏–∑ .env –≤ environment:
      DATABASE_URL: postgresql://postgres:postgres@db:5432/yachtpricer
      # –¥–æ–º–µ–Ω—ã, –∫–æ—Ç–æ—Ä—ã–º —Ä–∞–∑—Ä–µ—à–∞–µ–º CORS –≤ –ø—Ä–æ–¥–µ
      CORS_ORIGINS: https://sandbox.leonidk.de
      # –µ—Å–ª–∏ –Ω–∞ –ø—Ä–æ–¥–µ –ø–æ–∫–∞ –æ–∫ —Å –º–æ–∫–∞–º–∏ ‚Äî –æ—Å—Ç–∞–≤—å true; –∏–Ω–∞—á–µ –ø–æ—Å—Ç–∞–≤—å "false"
      NAUSYS_USE_MOCK: "true"
    depends_on:
      db:
        condition: service_healthy
    networks:
      - yachtpricer-net
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8000/api/health || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 5

  db:
    image: postgres:14
    restart: unless-stopped
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: yachtpricer
      PGDATA: /var/lib/postgresql/data/pgdata
    volumes:
      - ./db-data:/var/lib/postgresql/data
    ports:
      - "127.0.0.1:5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d yachtpricer"]
      interval: 5s
      timeout: 5s
      retries: 10
    networks:
      - yachtpricer-net

networks:
  yachtpricer-net:
    driver: bridge