// backend/src/main.ts

import { ValidationPipe } from '@nestjs/common';
import { NestFactory } from '@nestjs/core';
import { AppModule } from './app.module';
import { Logger } from '@nestjs/common';
import { PrismaService } from './prisma/prisma.service';

async function bootstrap() {
  const app = await NestFactory.create(AppModule, { bufferLogs: true });

  // —Å–∞–º—ã–π —à–∏—Ä–æ–∫–∏–π —É—Ä–æ–≤–µ–Ω—å –ª–æ–≥–æ–≤
  app.useLogger(['log', 'error', 'warn', 'debug', 'verbose']);

  app.setGlobalPrefix('api');

  // üëá —á–∏—Ç–∞–µ–º CORS_ORIGINS –∏–∑ env, –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é localhost –∏ sandbox
  const corsOrigins = (
    process.env.CORS_ORIGINS ??
    'http://localhost:3000,https://sandbox.leonidk.de'
  )
    .split(',')
    .map((s) => s.trim());

  app.enableCors({
    origin: corsOrigins,
    credentials: true, // –Ω—É–∂–Ω–æ –¥–ª—è Clerk –∏ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
  });

  // üëá –≤–∫–ª—é—á–∞–µ–º Prisma shutdown hooks
  const prismaService = app.get(PrismaService);
  prismaService.enableShutdownHooks(app);

  // ‚úÖ –≥–ª–æ–±–∞–ª—å–Ω—ã–π ValidationPipe
  app.useGlobalPipes(
    new ValidationPipe({
      transform: true, // –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –∫–∞—Å—Ç —Ç–∏–ø–æ–≤ (—Å—Ç—Ä–æ–∫–∏ -> —á–∏—Å–ª–∞ –∏ —Ç.–¥.)
      whitelist: true, // –∏–≥–Ω–æ—Ä–∏—Ä–æ–≤–∞—Ç—å —Å–≤–æ–π—Å—Ç–≤–∞, –∫–æ—Ç–æ—Ä—ã—Ö –Ω–µ—Ç –≤ DTO
      forbidNonWhitelisted: true, // –≤—ã–±—Ä–∞—Å—ã–≤–∞—Ç—å 400, –µ—Å–ª–∏ –ø—Ä–∏—à–ª–∏ –ª–∏—à–Ω–∏–µ —Å–≤–æ–π—Å—Ç–≤–∞
    }),
  );

  await app.listen(8000);
  Logger.log('HTTP server listening on http://localhost:8000', 'Bootstrap');
}
bootstrap();
