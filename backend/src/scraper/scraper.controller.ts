// backend/src/scraper/scraper.controller.ts

import {
  Body,
  Controller,
  Get,
  Post,
  Query,
  UsePipes,
  ValidationPipe,
  Logger,
} from '@nestjs/common';
import { ScraperService } from './scraper.service';
import {
  StartScrapeDto,
  StartResponseDto,
  ScrapeStatusQueryDto,
  CompetitorsQueryDto,
  AggregateDto,
  TestFiltersDto,
} from './scraper.dto';
import { Roles } from '../auth/roles.decorator';
// import { Public } from '../auth/public.decorator';
import { HttpCode, HttpStatus } from '@nestjs/common';
import { CurrentUser } from '../auth/current-user.decorator';
import { User } from '@prisma/client';

@Controller('scrape')
// –õ–æ–∫–∞–ª—å–Ω—ã–π ValidationPipe: —Ç—Ä–∞–Ω—Å—Ñ–æ—Ä–º–∏—Ä—É–µ—Ç —Å—Ç—Ä–æ–∫–∏ –≤ —á–∏—Å–ª–∞/–¥–∞—Ç—ã –ø–æ –¥–µ–∫–æ—Ä–∞—Ç–æ—Ä–∞–º –∏ –æ—Ç—Å–µ–∫–∞–µ—Ç –ª–∏—à–Ω–∏–µ –ø–æ–ª—è.
// –ï—Å–ª–∏ –≥–ª–æ–±–∞–ª—å–Ω—ã–π –ø–∞–π–ø –≤–∫–ª—é—á—ë–Ω –≤ main.ts ‚Äî —ç—Ç–æ—Ç –º–æ–∂–Ω–æ —É–±—Ä–∞—Ç—å, –Ω–æ –¥—É–±–ª–∏—Ä–æ–≤–∞–Ω–∏–µ –Ω–µ –≤—Ä–µ–¥–Ω–æ.
@UsePipes(new ValidationPipe({ transform: true, whitelist: true }))
export class ScraperController {
  private readonly logger = new Logger(ScraperController.name);

  constructor(private readonly svc: ScraperService) {
    // –ö–æ—Ä–æ—Ç–∫–∏–π –ª–æ–≥ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –∫–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä–∞ (1 —Ä–∞–∑ –ø—Ä–∏ —Å—Ç–∞—Ä—Ç–µ)
    this.logger.log('ScraperController initialized');
  }

  /**
   * –°—Ç–∞—Ä—Ç –∑–∞–¥–∞—á–∏ —Å–∫—Ä–µ–π–ø–∞.
   * –í –ª–æ–≥ –ø–∏—à–µ–º —Ç–æ–ª—å–∫–æ –∫–ª—é—á–µ–≤—ã–µ –ø–æ–ª—è (–±–µ–∑ –ø–æ–ª–Ω–æ–≥–æ JSON), —á—Ç–æ–±—ã –Ω–µ –∑–∞—Å–æ—Ä—è—Ç—å –ª–æ–≥–∏ –∏ –Ω–µ —Å–≤–µ—Ç–∏—Ç—å –ª–∏—à–Ω–µ–µ.
   */
  @Post('start')
  @Roles('MANAGER', 'ADMIN')
  start(
    @CurrentUser() user: Pick<User, 'id' | 'orgId'>,
    @Body() dto: StartScrapeDto,
  ): Promise<StartResponseDto> {
    try {
      const { yachtId, weekStart, source, filterId } = dto;

      this.logger.log(
        `hit /scrape/start: ${JSON.stringify({
          yachtId,
          weekStart,
          source,
          filterId: filterId ?? null,
          userOrgId: user?.orgId ?? null,
        })}`,
      );
    } catch (err) {
      this.logger.warn(
        `hit /scrape/start (failed to stringify dto): ${String(err)}`,
      );
    }
    return this.svc.start(dto, user);
  }

  @Post('aggregate')
  @Roles('MANAGER', 'ADMIN')
  aggregate(@Body() dto: AggregateDto) {
    return this.svc.aggregate(dto);
  }

  /**
   * –°—Ç–∞—Ç—É—Å —Ä–∞–Ω–µ–µ –∑–∞–ø—É—â–µ–Ω–Ω–æ–π –∑–∞–¥–∞—á–∏ –ø–æ jobId.
   * DTO –≤–∞–ª–∏–¥–∏—Ä—É–µ—Ç —Ñ–æ—Ä–º–∞—Ç jobId (–µ—Å–ª–∏ –∑–∞–¥–∞–Ω), –∞ —Å–µ—Ä–≤–∏—Å –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∑–∞–ø–∏—Å—å –∏–∑ –ë–î.
   */
  @Get('status')
  status(@Query() query: ScrapeStatusQueryDto) {
    return this.svc.status(query.jobId);
  }

  /**
   * –í—ã–¥–∞—ë—Ç —Å–æ—Ö—Ä–∞–Ω—ë–Ω–Ω—ã–µ —Ü–µ–Ω—ã –∫–æ–Ω–∫—É—Ä–µ–Ω—Ç–æ–≤.
   * –§–∏–ª—å—Ç—Ä—ã: –ø–æ yachtId –∏/–∏–ª–∏ –Ω–µ–¥–µ–ª–µ (–ª—é–±–æ–π –¥–µ–Ω—å –Ω–µ–¥–µ–ª–∏ ‚Äî –≤ —Å–µ—Ä–≤–∏—Å–µ –Ω–æ—Ä–º–∞–ª–∏–∑—É–µ—Ç—Å—è –∫ —Å—É–±–±–æ—Ç–µ).
   */
  @Get('competitors-prices')
  list(@Query() query: CompetitorsQueryDto) {
    return this.svc.getCompetitors({
      yachtId: query.yachtId,
      week: query.week,
    });
  }

  /**
   * Dry-run —Ç–µ—Å—Ç —Ñ–∏–ª—å—Ç—Ä–æ–≤: –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Ç–æ–ª—å–∫–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–¥—Ö–æ–¥—è—â–∏—Ö —è—Ö—Ç.
   * –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞—é—Ç—Å—è countryCodes (ISO-2), categoryIds, builderIds.
   */
  /**
   * Dry-run —Ç–µ—Å—Ç —Ñ–∏–ª—å—Ç—Ä–æ–≤: –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Ç–æ–ª—å–∫–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–¥—Ö–æ–¥—è—â–∏—Ö —è—Ö—Ç.
   * –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞—é—Ç—Å—è countryCodes (ISO-2), categoryIds, builderIds.
   */
  @Post('test')
  // @Public() // –≤—Ä–µ–º–µ–Ω–Ω–æ, —á—Ç–æ–±—ã —Ñ—Ä–æ–Ω—Ç –º–æ–≥ –¥–µ—Ä–Ω—É—Ç—å –±–µ–∑ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –º–∞–ø–ø–∏–Ω–≥–∞ Clerk‚ÜíUser
  @Roles('MANAGER', 'ADMIN')
  @HttpCode(HttpStatus.OK) // üëà —Ç–µ–ø–µ—Ä—å –æ—Ç–≤–µ—Ç –≤—Å–µ–≥–¥–∞ 200 –≤–º–µ—Å—Ç–æ 201
  async test(
    @CurrentUser() user: Pick<User, 'id' | 'orgId'>,
    @Body() dto: TestFiltersDto,
  ): Promise<{ count: number }> {
    this.logger.log(
      `hit /scrape/test: ${JSON.stringify({
        countryCodes: dto.countryCodes?.length ?? 0,
        categoryIds: dto.categoryIds?.length ?? 0,
        builderIds: dto.builderIds?.length ?? 0,
        userOrgId: user?.orgId ?? null,
      })}`,
    );
    // –°–µ—Ä–≤–∏—Å –ø–æ–∫–∞ –Ω–µ –ø—Ä–∏–Ω–∏–º–∞–µ—Ç user ‚Äî –ø–µ—Ä–µ–¥–∞—ë–º —Ç–æ–ª—å–∫–æ dto.
    return this.svc.testFilters(dto);
  }
}
