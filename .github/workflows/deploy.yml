name: Deploy to VPS

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Deploy to VPS (git pull + docker compose up)
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: sandbox.leonidk.de
          username: leonidk
          key: ${{ secrets.VPS_SSH_PRIVATE_KEY }}
          port: 22
          script: |
            set -euo pipefail

            REPO_DIR=/home/leonidk/yachtpricer/yachtpricer-mvp
            ORIGIN=https://github.com/klb1963/yachtpricer-mvp.git

            mkdir -p "$REPO_DIR"
            chown -R "$USER":"$USER" "$REPO_DIR" || true

            if [ ! -d "$REPO_DIR/.git" ]; then
              if [ -z "$(ls -A "$REPO_DIR")" ]; then
                git clone --depth=1 "$ORIGIN" "$REPO_DIR"
              else
                cd "$REPO_DIR"
                git init
                git remote add origin "$ORIGIN" || true
              fi
            fi

            cd "$REPO_DIR"
            git config --global --add safe.directory "$REPO_DIR"
            git fetch --all --prune
            git reset --hard origin/main

            # На всякий случай отключим override-файлы, если вдруг лежат на сервере
            [ -f docker-compose.override.yml ] && mv -f docker-compose.override.yml docker-compose.local.yml || true
            for f in docker-compose.override.*.yml; do
              [ -f "$f" ] && mv -f "$f" "${f%.yml}.local.yml" || true
            done

            # Используем ТОЛЬКО базовый compose-файл
            docker compose -f docker-compose.yml down --remove-orphans || true

            # Подтянуть свежие образы из registry (если используются image: теги)
            docker compose -f docker-compose.yml pull || true

            # Полная сборка без использования старых базовых образов и с подробными логами
            docker compose -f docker-compose.yml build --pull --progress=plain

            # Запуск
            docker compose -f docker-compose.yml up -d --remove-orphans

            # Ждём, пока backend станет здоров
            ok=""
            for i in $(seq 1 30); do
              if curl -fsS http://localhost:8000/api/health >/dev/null; then
                echo "Backend is healthy."
                ok="yes"
                break
              fi
              echo "Waiting for backend... ($i/30)"
              sleep 2
            done

            if [ -z "$ok" ]; then
              echo "Backend failed to become healthy. Recent logs:"
              docker compose -f docker-compose.yml logs backend --tail=200
              exit 1
            fi

            # Перезапуск Prisma Studio, чтобы подхватил свежую схему/миграции
            docker compose -f docker-compose.yml restart prisma-studio || true

            docker compose -f docker-compose.yml ps

            # Опционально: чистка подвисших/неиспользуемых слоёв
            docker image prune -f || true
